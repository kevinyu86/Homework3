[
  {
    "objectID": "HW3.html",
    "href": "HW3.html",
    "title": "HW3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n../MyData.csv\n\nWhat are the major benefits of using R projects?\n\nUisng R project, we could 1) keep all datasets and scripts in one directory; 2)set the working directory automatically to this project directory every time you open the project; 3) track changes to your scripts using Git, making it easy to collaborate with others; 4) document your analysis process using R Markdown and keep the documentation within the project. Overall, using R projects leads to a more organized, reproducible, and collaborative workflow, which is particularly beneficial for complex data analysis tasks and team-based projects.\n\nWhat is git and what is github?\n\nGit is a distributed version control system designed to handle everything from small to very large projects with speed and efficiency. GitHub is a web-based platform that leverages the capabilities of Git to provide a suite of tools for collaborative software development and version control.\n\nWhat are the two main differences between a tibble and a data.frame?\n\n1) Printing behavior\n2) Subsetting\n\nRewrite the following nested function call using baseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\niris |&gt; as_tibble() |&gt; select(starts_with(“Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\nIn long format data, each row represents a single observation, and multiple measurements or time points for the same subject are represented as multiple rows.\nIn wide format data, each row represents a single subject, and multiple measurements or time points for the same subject are represented as different columns.\nLong format data is generally preferred for statistical analysis due to its flexibility and compatibility with many analysis and visualization tools. It allows for easier handling of complex data structures such as repeated measures and time series, making it a more versatile choice for a wide range of statistical tasks."
  },
  {
    "objectID": "HW3.html#task-1-conceptual-questions",
    "href": "HW3.html#task-1-conceptual-questions",
    "title": "HW3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n../MyData.csv\n\nWhat are the major benefits of using R projects?\n\nUisng R project, we could 1) keep all datasets and scripts in one directory; 2)set the working directory automatically to this project directory every time you open the project; 3) track changes to your scripts using Git, making it easy to collaborate with others; 4) document your analysis process using R Markdown and keep the documentation within the project. Overall, using R projects leads to a more organized, reproducible, and collaborative workflow, which is particularly beneficial for complex data analysis tasks and team-based projects.\n\nWhat is git and what is github?\n\nGit is a distributed version control system designed to handle everything from small to very large projects with speed and efficiency. GitHub is a web-based platform that leverages the capabilities of Git to provide a suite of tools for collaborative software development and version control.\n\nWhat are the two main differences between a tibble and a data.frame?\n\n1) Printing behavior\n2) Subsetting\n\nRewrite the following nested function call using baseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\niris |&gt; as_tibble() |&gt; select(starts_with(“Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\nIn long format data, each row represents a single observation, and multiple measurements or time points for the same subject are represented as multiple rows.\nIn wide format data, each row represents a single subject, and multiple measurements or time points for the same subject are represented as different columns.\nLong format data is generally preferred for statistical analysis due to its flexibility and compatibility with many analysis and visualization tools. It allows for easier handling of complex data structures such as repeated measures and time series, making it a more versatile choice for a wide range of statistical tasks."
  },
  {
    "objectID": "HW3.html#task-2-reading-delimited-data",
    "href": "HW3.html#task-2-reading-delimited-data",
    "title": "HW3",
    "section": "Task 2 Reading Delimited Data",
    "text": "Task 2 Reading Delimited Data\nGlass data\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n#read in data\nglass &lt;- read_delim(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\", \n                       delim = \",\",\n                       col_names = c(\"ID\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type\")\n)\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): ID, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# print tibble \nglass\n\n# A tibble: 214 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe  Type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0        1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0        1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0        1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0        1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0        1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26     1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0        1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0        1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0        1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11     1\n# ℹ 204 more rows\n\n# overwrite last column and select observations\nglass |&gt; \n  mutate(Type = case_when(\n                        Type == 1 ~ \"building_windows_float_processed\",\n                        Type == 2 ~ \"building_windows_non_float_processed\",\n                        Type == 3 ~ \"vehicle_windows_float_processed\",\n                        Type == 4 ~ \"vehicle_windows_non_float_processed\n(none in this database)\",\n                        Type == 5 ~ \"containers\",\n                        Type == 6 ~ \"tableware\",\n                        Type == 7 ~ \"headlamps\",\n ) \n) |&gt; \n  filter (Fe &lt; 0.2 | Type %in% c(\"tableware\", \"headlamp\")) |&gt;\n  print(n=50)\n\n# A tibble: 189 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type             \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75  0     0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83  0     0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78  0     0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22  0     0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07  0     0    building_windows…\n 6     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17  0     0    building_windows…\n 7     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24  0     0    building_windows…\n 8     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3   0     0    building_windows…\n 9    10  1.52  13    3.6   1.36  73.0  0.57  8.4   0     0.11 building_windows…\n10    12  1.52  12.8  3.66  1.27  73.0  0.6   8.56  0     0    building_windows…\n11    14  1.52  12.9  3.56  1.27  73.2  0.54  8.38  0     0.17 building_windows…\n12    15  1.52  12.6  3.59  1.31  73.3  0.58  8.5   0     0    building_windows…\n13    16  1.52  12.8  3.54  1.23  73.2  0.58  8.39  0     0    building_windows…\n14    17  1.52  12.7  3.67  1.16  73.1  0.61  8.7   0     0    building_windows…\n15    18  1.52  14.4  3.85  0.89  71.4  0.15  9.15  0     0    building_windows…\n16    19  1.52  13.9  3.73  1.18  72.1  0.06  8.89  0     0    building_windows…\n17    20  1.52  13.0  3.54  1.69  72.7  0.54  8.44  0     0.07 building_windows…\n18    21  1.52  12.8  3.55  1.49  72.8  0.54  8.52  0     0.19 building_windows…\n19    22  1.52  14.8  3.75  0.29  72.0  0.03  9     0     0    building_windows…\n20    23  1.52  12.8  3.62  1.29  72.8  0.59  8.7   0     0    building_windows…\n21    24  1.52  12.8  3.57  1.35  73.0  0.62  8.59  0     0    building_windows…\n22    25  1.52  13.4  3.5   1.15  72.8  0.5   8.43  0     0    building_windows…\n23    26  1.52  13.0  3.54  1.21  73    0.65  8.53  0     0    building_windows…\n24    27  1.52  13.2  3.48  1.41  72.6  0.59  8.43  0     0    building_windows…\n25    28  1.52  12.9  3.48  1.33  73.0  0.56  8.43  0     0    building_windows…\n26    29  1.52  12.6  3.52  1.43  73.2  0.57  8.54  0     0    building_windows…\n27    30  1.52  13.1  3.49  1.28  72.9  0.6   8.49  0     0    building_windows…\n28    31  1.52  12.6  3.56  1.3   73.1  0.61  8.69  0     0.14 building_windows…\n29    32  1.52  12.8  3.5   1.14  73.3  0.56  8.55  0     0    building_windows…\n30    34  1.52  12.6  3.47  1.38  73.4  0.6   8.55  0     0.06 building_windows…\n31    35  1.52  12.7  3.54  1.34  73.0  0.57  8.75  0     0    building_windows…\n32    36  1.52  13.3  3.45  1.21  72.7  0.56  8.57  0     0    building_windows…\n33    37  1.52  13.9  3.53  1.32  71.8  0.51  8.78  0.11  0    building_windows…\n34    38  1.52  12.7  3.48  1.35  73.0  0.64  8.68  0     0    building_windows…\n35    39  1.52  14.2  3.82  0.47  71.8  0.11  9.57  0     0    building_windows…\n36    40  1.52  14.2  3.82  0.47  71.8  0.11  9.57  0     0    building_windows…\n37    41  1.52  12.8  3.5   1.12  73.0  0.64  8.77  0     0    building_windows…\n38    42  1.52  12.7  3.42  1.2   73.2  0.59  8.64  0     0    building_windows…\n39    43  1.52  13.2  3.39  1.33  72.8  0.59  8.59  0     0    building_windows…\n40    44  1.52  13.7  3.84  0.72  71.8  0.17  9.74  0     0    building_windows…\n41    46  1.52  13.5  3.48  1.35  72.0  0.55  9     0     0    building_windows…\n42    47  1.52  13.2  3.37  1.18  72.7  0.57  8.83  0     0.16 building_windows…\n43    48  1.53  14.0  3.7   0.71  71.6  0.02  9.82  0     0.1  building_windows…\n44    49  1.52  13.2  3.77  0.79  72.0  0.13 10.0   0     0    building_windows…\n45    50  1.52  13.6  3.35  1.23  72.1  0.59  8.91  0     0    building_windows…\n46    51  1.52  13.7  3.72  0.51  71.8  0.09 10.1   0     0.16 building_windows…\n47    52  1.52  13.2  3.33  1.28  72.4  0.6   9.14  0     0.11 building_windows…\n48    53  1.52  13.4  2.87  1.19  72.8  0.55  9.03  0     0    building_windows…\n49    54  1.52  13.1  2.84  1.28  72.8  0.55  9.07  0     0    building_windows…\n50    55  1.52  13.2  2.81  1.29  73.0  0.51  9.02  0     0.09 building_windows…\n# ℹ 139 more rows\n\n\nYeast data\n\n#read in data\nyeast &lt;- read_table(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\",\n                       col_names = c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\", \"class\")\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\n# print tibble \nyeast\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n# overwrite last column and select observations\nyeast |&gt;\n  select(-c(seq_name, nuc)) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric), mean, .names = \"mean_{.col}\")) |&gt;\n  print(n=50)\n\n# A tibble: 1,484 × 15\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mean_mcg mean_gvh mean_alm\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521    0.533    0.517\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521    0.533    0.517\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521    0.533    0.517\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452    0.456    0.529\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521    0.533    0.517\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481    0.470    0.535\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521    0.533    0.517\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452    0.456    0.529\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521    0.533    0.517\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481    0.470    0.535\n11  0.43  0.39  0.54  0.21   0.5   0    0.53 NUC      0.452    0.456    0.529\n12  0.42  0.37  0.59  0.2    0.5   0    0.52 NUC      0.452    0.456    0.529\n13  0.4   0.42  0.57  0.35   0.5   0    0.53 CYT      0.481    0.470    0.535\n14  0.6   0.4   0.52  0.46   0.5   0    0.53 MIT      0.521    0.533    0.517\n15  0.66  0.55  0.45  0.19   0.5   0    0.46 MIT      0.521    0.533    0.517\n16  0.46  0.44  0.52  0.11   0.5   0    0.5  CYT      0.481    0.470    0.535\n17  0.47  0.39  0.5   0.11   0.5   0    0.49 CYT      0.481    0.470    0.535\n18  0.58  0.47  0.54  0.11   0.5   0    0.51 NUC      0.452    0.456    0.529\n19  0.5   0.34  0.55  0.21   0.5   0    0.49 NUC      0.452    0.456    0.529\n20  0.61  0.6   0.55  0.21   0.5   0    0.5  NUC      0.452    0.456    0.529\n21  0.45  0.4   0.5   0.16   0.5   0    0.5  CYT      0.481    0.470    0.535\n22  0.43  0.44  0.48  0.22   0.5   0    0.51 CYT      0.481    0.470    0.535\n23  0.73  0.63  0.42  0.3    0.5   0    0.49 CYT      0.481    0.470    0.535\n24  0.43  0.53  0.52  0.13   0.5   0    0.55 CYT      0.481    0.470    0.535\n25  0.46  0.53  0.52  0.15   0.5   0    0.58 CYT      0.481    0.470    0.535\n26  0.51  0.51  0.52  0.51   0.5   0    0.54 MIT      0.521    0.533    0.517\n27  0.59  0.45  0.53  0.19   0.5   0    0.59 CYT      0.481    0.470    0.535\n28  0.57  0.47  0.6   0.18   0.5   0    0.51 CYT      0.481    0.470    0.535\n29  0.63  0.67  0.57  0.24   0.5   0    0.49 MIT      0.521    0.533    0.517\n30  0.8   0.88  0.36  0.39   0.5   0    0.56 ME1      0.789    0.757    0.376\n31  0.53  0.54  0.43  0.1    0.5   0    0.57 NUC      0.452    0.456    0.529\n32  0.51  0.51  0.43  0.87   0.5   0    0.52 MIT      0.521    0.533    0.517\n33  0.38  0.61  0.61  0.12   0.5   0    0.53 CYT      0.481    0.470    0.535\n34  0.33  0.55  0.51  0.43   0.5   0    0.51 NUC      0.452    0.456    0.529\n35  0.78  0.74  0.42  0.26   0.5   0    0.43 ME1      0.789    0.757    0.376\n36  0.74  0.67  0.47  0.34   0.5   0    0.42 EXC      0.735    0.717    0.493\n37  0.72  0.61  0.45  0.3    0.5   0    0.54 MIT      0.521    0.533    0.517\n38  0.4   0.45  0.57  0.18   0.5   0    0.56 CYT      0.481    0.470    0.535\n39  0.59  0.53  0.43  0.44   0.5   0    0.5  MIT      0.521    0.533    0.517\n40  0.57  0.53  0.53  0.34   0.5   0    0.53 MIT      0.521    0.533    0.517\n41  0.86  0.68  0.39  0.24   0.5   0    0.54 ME2      0.722    0.603    0.415\n42  0.86  0.74  0.51  0.4    0.5   0    0.55 ME2      0.722    0.603    0.415\n43  0.79  0.57  0.41  0.28   0.5   0    0.59 ME2      0.722    0.603    0.415\n44  0.41  0.54  0.39  0.2    0.5   0    0.51 ME3      0.431    0.490    0.364\n45  0.37  0.36  0.56  0.18   0.5   0    0.48 VAC      0.548    0.526    0.465\n46  0.53  0.31  0.58  0.39   0.5   0    0.47 NUC      0.452    0.456    0.529\n47  0.74  0.75  0.58  0.47   0.5   0    0.4  ME2      0.722    0.603    0.415\n48  0.49  0.39  0.52  0.29   0.5   0    0.48 EXC      0.735    0.717    0.493\n49  0.74  0.57  0.51  0.28   0.5   0    0.58 VAC      0.548    0.526    0.465\n50  0.42  0.24  0.34  0.16   0.5   0    0.5  ME3      0.431    0.490    0.364\n# ℹ 1,434 more rows\n# ℹ 4 more variables: mean_mit &lt;dbl&gt;, mean_erl &lt;dbl&gt;, mean_pox &lt;dbl&gt;,\n#   mean_vac &lt;dbl&gt;"
  },
  {
    "objectID": "HW3.html#task-3-combining-excel-and-delimited-data",
    "href": "HW3.html#task-3-combining-excel-and-delimited-data",
    "title": "HW3",
    "section": "Task 3: Combining Excel and Delimited Data",
    "text": "Task 3: Combining Excel and Delimited Data\n\nlibrary(readxl)\n# read in white wine dataset\nwhite_wine &lt;- read_excel(\"white-wine.xlsx\")\nwhite_wine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n# read in col names\ncol_name &lt;- read_excel(\"white-wine.xlsx\", \n                            sheet = excel_sheets(\"white-wine.xlsx\")[2])\ncol_name\n\n# A tibble: 12 × 1\n   Variables           \n   &lt;chr&gt;               \n 1 fixed_acidity       \n 2 volatile_acidity    \n 3 citric_acid         \n 4 residual_sugar      \n 5 chlorides           \n 6 free_sulfur_dioxide \n 7 total_sulfur_dioxide\n 8 density             \n 9 pH                  \n10 sulphates           \n11 alcohol             \n12 quality             \n\n# overwrite the current column names\ncolnames(white_wine) &lt;- col_name$Variables\n\n# add a new column\nwhite_wine &lt;- white_wine |&gt;\n  mutate(type = \"white\")\n\n# read in red wine dataset\nred_wine &lt;- read_csv2(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\", col_names = TRUE, col_types = cols(.default = \"n\"))\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n# overwrite the current column names\ncolnames(red_wine) &lt;- col_name$Variables\n\n\n# add a new column\nred_wine &lt;- red_wine |&gt;\n  mutate(type = \"red\")\n\n# combine two datasets\nwine &lt;- bind_rows(white_wine, red_wine)\n\n# filter, select and add new stats columns\nwine |&gt;\n  filter(quality &gt; 6.5 | alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  group_by(quality) |&gt;\n  mutate(alcohol_mean = mean(alcohol), alcohol_std = sd(alcohol)) |&gt;\n  print(n=50)\n\n# A tibble: 6,404 × 15\n# Groups:   quality [7]\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            91             0.27        0.45          10.6      0.035\n 2            66             0.36        0.29           1.6      0.021\n 3            74             0.24        0.36           2        0.031\n 4            69             0.36        0.34           4.2      0.018\n 5            71             0.26        0.49           2.2      0.032\n 6            62             0.66        0.48           1.2      0.029\n 7            62             0.66        0.48           1.2      0.029\n 8            68             0.26        0.42           1.7      0.049\n 9            67             0.23        0.31           2.1      0.046\n10            67             0.23        0.31           2.1      0.046\n11            52             0.44        0.04           1.4      0.036\n12            52             0.44        0.04           1.4      0.036\n13            68             0.53        0.35           3.8      0.034\n14            67             0.26        0.39           1.1      0.04 \n15             7             0.24        0.36           2.8      0.034\n16            61             0.31        0.58           5        0.039\n17             5             0.55        0.14           8.3      0.032\n18            64             0.32        0.35           4.8      0.03 \n19             7             0.23        0.36           7.1      0.028\n20            66             0.16        0.32           1.4      0.035\n21             6             0.25        0.28           2.2      0.026\n22            59             0.27        0.29          11.4      0.036\n23            65             0.36        0.28           3.2      0.037\n24            62             0.24        0.29          13.3      0.039\n25            71             0.32        0.34          14.5      0.039\n26            66             0.33        0.31           1.3      0.02 \n27            81             0.17        0.44          14.1      0.053\n28            81             0.17        0.44          14.1      0.053\n29             6             0.18        0.31           1.4      0.036\n30            73             0.3         0.34           2.7      0.044\n31            75             0.42        0.34           4.3      0.04 \n32            73             0.25        0.36           2.1      0.034\n33            73             0.25        0.36           2.1      0.034\n34            73             0.25        0.36           2.1      0.034\n35            73             0.21        0.29           1.6      0.034\n36            73             0.21        0.29           1.6      0.034\n37            81             0.27        0.35           1.7      0.03 \n38            78             0.18        0.46          12.6      0.042\n39            69             0.12        0.36           2.2      0.037\n40            69             0.21        0.28           2.4      0.056\n41            71             0.25        0.39           2.1      0.036\n42            79             0.28        0.41           2        0.044\n43            68             0.19        0.32           7.05     0.019\n44            52             0.24        0.45           3.8      0.027\n45             7             0.24        0.32           1.3      0.037\n46            53             0.24        0.33           1.3      0.033\n47            52             0.24        0.45           3.8      0.027\n48             7             0.15        0.38           2.2      0.047\n49             6             0.26        0.42           5.2      0.027\n50            61             0.31        0.37           8.4      0.031\n# ℹ 6,354 more rows\n# ℹ 10 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;, alcohol_mean &lt;dbl&gt;, alcohol_std &lt;dbl&gt;"
  },
  {
    "objectID": "HW3.html#task-4-database-practice",
    "href": "HW3.html#task-4-database-practice",
    "title": "HW3",
    "section": "Task 4: Database Practice",
    "text": "Task 4: Database Practice\n\nlibrary(DBI)\n#connect to database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"lahman.db\")\n\n#list all tables\ndbListTables(con)\n\n [1] \"AllstarFull\"         \"Appearances\"         \"AwardsManagers\"     \n [4] \"AwardsPlayers\"       \"AwardsShareManagers\" \"AwardsSharePlayers\" \n [7] \"Batting\"             \"BattingPost\"         \"CollegePlaying\"     \n[10] \"Fielding\"            \"FieldingOF\"          \"FieldingOFsplit\"    \n[13] \"FieldingPost\"        \"HallOfFame\"          \"HomeGames\"          \n[16] \"LahmanData\"          \"Managers\"            \"ManagersHalf\"       \n[19] \"Parks\"               \"People\"              \"Pitching\"           \n[22] \"PitchingPost\"        \"Salaries\"            \"Schools\"            \n[25] \"SeriesPost\"          \"Teams\"               \"TeamsFranchises\"    \n[28] \"TeamsHalf\"           \"battingLabels\"       \"fieldingLabels\"     \n[31] \"pitchingLabels\"     \n\n# return Teams table for for 2025 use tbl()\ntbl(con, \"Teams\") |&gt;\n  filter(yearID == 2015)\n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.45.0 [/Users/xingwangyu/Dropbox/My Mac (Xingwangs-MacBook-Pro.local)/Documents/ST558/Homework3/lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n# redo above using sql()\ntbl(con, sql(\n  \"SELECT * FROM 'TEAMS'\n   WHERE (`yearID` = 2015)\")\n  )\n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.45.0 [/Users/xingwangyu/Dropbox/My Mac (Xingwangs-MacBook-Pro.local)/Documents/ST558/Homework3/lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n# return hall of frame\ntbl(con, 'HallOfFame') |&gt;\n  filter(inducted == \"Y\") |&gt;\n  select(playerID, yearID, category) |&gt;\n  collect()\n\n# A tibble: 340 × 3\n   playerID  yearID category         \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;            \n 1 cobbty01    1936 Player           \n 2 ruthba01    1936 Player           \n 3 wagneho01   1936 Player           \n 4 mathech01   1936 Player           \n 5 johnswa01   1936 Player           \n 6 lajoina01   1937 Player           \n 7 speaktr01   1937 Player           \n 8 youngcy01   1937 Player           \n 9 bulkemo99   1937 Pioneer/Executive\n10 johnsba99   1937 Pioneer/Executive\n# ℹ 330 more rows\n\n# combine with People table to get name\ndat1 &lt;- inner_join(tbl(con, 'HallOfFame') |&gt; filter(inducted == \"Y\") |&gt; select(playerID, yearID, category), \n           tbl(con, 'People') |&gt; select(playerID, nameFirst, nameLast),\n           by = join_by(playerID == playerID)) |&gt;\n  collect()\n\n# return Managers table\ndat2 &lt;- tbl(con, \"Managers\") |&gt;\n  select(playerID, G, W, L) |&gt;\n  group_by(playerID) |&gt;\n  summarize(G_managed = sum(G, na.rm = TRUE),\n            Total_W = sum(W, na.rm = TRUE),\n            Total_L = sum(L, na.rm = TRUE)) |&gt;\n  collect() |&gt;\n  mutate(win_percent = Total_W/G_managed) |&gt;\n  arrange(desc(Total_W/G_managed))\n\n# join dat1 and dat2\ninner_join(dat1, dat2, by = join_by(playerID == playerID))\n\n# A tibble: 97 × 9\n   playerID  yearID category        nameFirst nameLast G_managed Total_W Total_L\n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;     &lt;chr&gt;        &lt;int&gt;   &lt;int&gt;   &lt;int&gt;\n 1 cobbty01    1936 Player          Ty        Cobb           933     479     444\n 2 wagneho01   1936 Player          Honus     Wagner           5       1       4\n 3 mathech01   1936 Player          Christy   Mathews…       346     164     176\n 4 johnswa01   1936 Player          Walter    Johnson        966     529     432\n 5 lajoina01   1937 Player          Nap       Lajoie         700     377     309\n 6 speaktr01   1937 Player          Tris      Speaker       1139     617     520\n 7 youngcy01   1937 Player          Cy        Young            6       3       3\n 8 mackco01    1937 Manager         Connie    Mack          7755    3731    3948\n 9 mcgrajo01   1937 Manager         John      McGraw        4769    2763    1948\n10 wrighge01   1937 Pioneer/Execut… George    Wright          85      59      25\n# ℹ 87 more rows\n# ℹ 1 more variable: win_percent &lt;dbl&gt;"
  }
]